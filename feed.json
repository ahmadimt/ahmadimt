{
    "version": "https://jsonfeed.org/version/1",
    "title": "imteyazahmad.com",
    "description": "",
    "home_page_url": "https://imteyazahmad.com",
    "feed_url": "https://imteyazahmad.com/feed.json",
    "user_comment": "",
    "author": {
        "name": "Imteyaz Ahmad"
    },
    "items": [
        {
            "id": "https://imteyazahmad.com/configuring-elasticsearch-java-high-level-rest-client-2/",
            "url": "https://imteyazahmad.com/configuring-elasticsearch-java-high-level-rest-client-2/",
            "title": "Configuring Elasticsearch Java High Level Rest Client",
            "summary": " This article describe how to configure the new Elasticsearch Java High&hellip;",
            "content_html": "\n  <p>\n    This article describe how to configure the new Elasticsearch Java High level rest client in a Java Application.\n  </p>\n\n    <h2 id=\"introduction\">\n      Introduction\n    </h2>\n\n  <p>\n    Elasticsearch&nbsp;5.0.0 released it first&nbsp;Java REST Client. This client was called low-level client as the Java users had to build the JSON request and parse the results. Later, Elasticsearch 5.6 introduced&nbsp;&nbsp;Java High Level REST Client which accepts&nbsp;request objects and returns response objects for the most important APIs(info, get, index, delete, update, bulk, search, search-scroll, and clear-scroll). For other APIs, we still have to use the low-level client.\n  </p>\n\n    <h2 id=\"dependencies\">\n      Dependencies\n    </h2>\n\n  <p>\n    It depends of the following artifacts and their transitive dependencies:<br>\n  </p>\n\n  <ul>\n    <li>org.elasticsearch.client:elasticsearch-rest-client</li><li>org.elasticsearch:elasticsearch<br></li>\n  </ul>\n\n  <p>\n    The minimum Java version required is <code>1.8</code>.&nbsp;\n  </p>\n\n  <p>\n    If you are using maven then it can declared as follows\n  </p>\n<pre class=\"line-numbers  language-java\"><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt;\n    &lt;artifactId&gt;elasticsearch-rest-high-level-client&lt;/artifactId&gt;\n    &lt;version&gt;${elasticsearch.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n  <p>\n    The Gradle users can declare the dependencies as\n  </p>\n<pre class=\"line-numbers  language-java\"><code>dependencies {\n    compile \"org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearch.version}\"\n}  </code></pre>\n\n  <p>\n    Replace the <code>${elasticsearch.version}</code> as appropriate.\n  </p>\n\n    <h2 id=\"initialization\">\n      Initialization\n    </h2>\n\n  <p>\n    The <code>RestHighLevelClient</code> is built on top of the REST low-level client builder. The following code will instantiate a low level <code>RestClientBuilder</code>.\n  </p>\n<pre class=\"line-numbers  language-java\"><code>RestClientBuilder  restClientBuilder  = RestClient.builder(\n    new HttpHost(\"localhost\", 9200, \"http\"),\n    new HttpHost(\"localhost\", 9201, \"http\"));</code></pre>\n\n  <p>\n    If the Elasticsearch is secured with user name and password then we need to provide the credentials using the&nbsp;<code>CredentialsProvider</code> as shown below. After that we can set a callback that allows to modify the http client configuration.&nbsp;\n  </p>\n<pre class=\"line-numbers  language-java\"><code>final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\ncredentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\n        &lt;elasticSearchUsername&gt;, &lt;elasticSearchPassword&gt;));\nrestClientBuilder.setHttpClientConfigCallback(new HttpClientConfigCallback() {\n      @Override\n      public HttpAsyncClientBuilder customizeHttpClient(\n          HttpAsyncClientBuilder httpClientBuilder) {\n        return httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider);\n      }\n    });\n/*\nUsing the Java 8 syntax, we can replace the above code like this\nbuilder.setHttpClientConfigCallback(\n        httpClientBuilder -&gt; httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider));\n*/</code></pre>\n\n  <p>\n    After this we can initialize the&nbsp;<code>RestHighLevelClient</code> as follows\n  </p>\n<pre class=\"line-numbers  language-java\"><code>RestHighLevelClient client = new RestHighLevelClient(restClientBuilder);</code></pre>\n\n    <h2 id=\"usage\">\n      Usage\n    </h2>\n\n  <p>\n    Each APIs in High Level REST Client can be called synchronously or asynchronously. In case of synchronous call it returns a response object. It can throw an <code>IOException</code> if either of the following occurs:\n  </p>\n\n  <ul>\n    <li>The request times out.</li><li>The client fails to parse the REST response</li><li>There is no response coming back from the server<br></li>\n  </ul>\n<pre class=\"line-numbers  language-java\"><code>SearchRequest searchRequest = new SearchRequest(\"posts\");\nsearchRequest.source(searchSourceBuilder);\nSearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);  \n</code></pre>\n\n  <p>\n    The following shows how to call a method asynchronously. We need to define an <code>ActionListener</code> which define how to handle the response and error if any. The following shows the code example for that:\n  </p>\n<pre class=\"line-numbers  language-java\"><code>// Asynchronous call example\nActionListener&lt;SearchResponse&gt; listener = new ActionListener&lt;SearchResponse&gt;() {\n    @Override\n    public void onResponse(SearchResponse searchResponse) {\n         //write the logic to parse the search response. \n    }\n\n    @Override\n    public void onFailure(Exception e) {\n        //Code to handle the exception goes here.\n    }\n};\nclient.searchAsync(searchRequest, RequestOptions.DEFAULT, listener);\n\n</code></pre>\n\n    <h2 id=\"references\">\n      References\n    </h2>\n\n  <ul>\n    <li>https://www.elastic.co/blog/state-of-the-official-elasticsearch-java-clients</li><li>https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-high.html<br></li><li>https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-low.html<br></li>\n  </ul>",
            "image": "https://imteyazahmad.com/media/posts/3/ball-563972_1920.jpg",
            "author": {
                "name": "Imteyaz Ahmad"
            },
            "tags": [
                   "Java",
                   "Elasticsearch"
            ],
            "date_published": "2021-04-02T17:05:09+05:30",
            "date_modified": "2021-04-02T19:21:58+05:30"
        }
    ]
}
